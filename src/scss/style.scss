@use "sass:math";

// Подключение миксинов
@import "base/mixins";

// Подключение шрифтов
//&display=swap - добавить при подключении через плагин
@import url("https://fonts.googleapis.com/css?family=Montserrat:regular,500,700,italic&display=swap");

// Подключить если есть локальные файлы шрифтов
//@import "fonts/fonts";

// Подключение иконочных шрифтов
// Подключить если есть файл иконочного шрифта
//@import "fonts/icons";

// Шрифт по умолчанию
$fontFamily: "Montserrat";
$fontSize: rem(14); // где 14(px) - размер шрифта по умолчанию из макета

// Основные цвета
$mainColor: #0c0c0c; // Цвет шрифта по умолчанию
$text: #494949;
$grey: #d9d9d9;
$bg: #f4f4f4;

// Настройки адаптивной сетки

// Минимальная ширина страницы
$minWidth: 320;
// Ширина полотна (макета)
$maxWidth: 1920;
// Ширина ограничивающего контейнера (0 = нет ограничения)
$maxWidthContainer: 726;
// Общий отступ у контейнера
// (30 = по 15px слева и справа, 0 = нет отступа)
$containerPadding: 30;

// Ширина срабатывания первого брейкпоинта
$containerWidth: $maxWidthContainer + $containerPadding;

// Брейк-поинты
$pc: em($containerWidth); // ПК, ноутбуки, некоторые планшеты в горизонтальном положении
$tablet: em(991.98); // Планшеты, некоторые телефоны в горизонтальном положении
$mobile: em(767.98); // Телефоны L
$mobileSmall: em(479.98); // Телефоны S

// Тип адаптива:
// 1 = отзывчивость (у контейнера нет брейкпоинтов),
// 2 = по брейк-поинтам (контейнер меняет свою ширину по брейк-поинтам)
$responsiveType: 1;

// Обнуление
@import "base/null";

// Стили тега BODY
body {
	// Скролл заблокирован
	.lock & {
		overflow: hidden;
		touch-action: none;
	}
	// Сайт загружен
	.loaded & {
	}
}

// Оболочка wrapper
.wrapper {
	min-height: 100%;
	display: flex;
	flex-direction: column;
	overflow: hidden;
	// Прижимаем footer
	> main {
		flex: 1 1 auto;
	}
	// Фикс для слайдеров
	> * {
		min-width: 0;
	}
}
// Ограничивающий контейнер
/*
(i) Стили будут применяться ко 
всем классам содержащим *__container
Например header__container, main__container и т.д.
Снипет (HTML): cnt
*/
@if ($responsiveType==1) {
	// Отзывчивая
	[class*="__container"] {
		@if ($maxWidthContainer>0) {
			max-width: rem($maxWidthContainer);
			box-sizing: content-box;
			margin: 0 auto;
		}
		@if ($containerPadding>0) {
			padding: 0 rem(math.div($containerPadding, 2));
		}
	}
} @else {
	// По брейк-поинтам
	[class*="__container"] {
		margin: 0 auto;
		@if ($maxWidthContainer>0) {
			max-width: rem($maxWidthContainer);
			box-sizing: content-box;
		} @else {
			@if ($containerPadding>0) {
				padding: 0 rem(math.div($containerPadding, 2));
			}
		}
		@media (max-width: $pc) {
			max-width: rem(970);
		}
		@media (max-width: $tablet) {
			max-width: rem(750);
		}
		@media (max-width: $mobile) {
			max-width: none;
			@if ($containerPadding>0 and $maxWidthContainer>0) {
				padding: 0 rem(math.div($containerPadding, 2));
			}
		}
	}
}

// Подключение базовых стилей, шаблонов (заготовок) и вспомогательных  классов
// Для подключения/отключения конкретных стилей смотри base.scss
@import "base";

// Подключение стилей общих элементов проекта
@import "common";

// Подключение стилей отдельных блоков
@import "header";
@import "footer";

// Подключение стилей отдельных страниц
@import "home";

.page {
	@include adaptiveValue("padding-top", 61, 40);

	&__container {
	}
}
.tabs {
	background: #fff;
	// .tabs__navigation
	&__navigation {
		font-size: 0;
	}
	// .tabs__title
	&__title {
		background: #d9d9d9;
		border-radius: 20px 20px 0px 0px;
		padding: 20px 24px;
		transition: all 0.3s ease 0s;
		min-height: 73px;
		&._tab-active {
			background: #ffffff;
			color: #3922c5;
			&::before {
				transform: translateY(-50%) rotate(180deg);
			}
		}
		._tab-spoller & {
			box-shadow: 0px 10px 40px rgba(12, 12, 12, 0.1);
			background: #fff;
			border-radius: 20px;
			width: 100%;
			text-align: left;
			position: relative;
			&._tab-active {
				&::before {
					transition: all 0.3s ease 0s;
					transform: translateY(-50%) rotate(-180deg);
				}
			}
			&::before {
				content: "";
				position: absolute;
				top: 50%;
				right: 17px;
				transform: translateY(-50%) rotate(0deg);
				background: url("@img/arrow.svg") no-repeat;
				width: 14px;
				height: 9px;
			}
			&:not(:last-child) {
				margin-bottom: 20px;
			}
		}
	}
	&__heading {
		&:not(:last-child) {
			margin-bottom: 20px;
		}
	}
	// .tabs__content
	&__content {
		@media (min-width: em(550)) {
			flex: 0 1 452px;
		}
		._tab-spoller & {
		}
	}
	// .tabs__body
	&__body {
	}
	// .tabs__main
	&__main {
		display: flex;
		@include adaptiveValue("gap", 71, 20);
		@include adaptiveValue("padding-bottom", 40, 30);
		@include adaptiveValue("padding-top", 40, 30);
		border-bottom: 1px solid #d9d9d9;
		@media (max-width: em(550)) {
			flex-direction: column;
		}
	}
	// .tabs__img
	&__img {
		@media (min-width: em(550)) {
			flex: 0 1 290px;
		}
		img {
			max-width: 100%;
			.tabs__body_woman & {
				content: url("../img/bicycle-02.png");
			}
			@media (min-width: em(550)) {
				transform: translateX(-15px);
			}
			@media (max-width: em(550)) {
				content: url("../img/bicycle-01-small.png");
				text-align: center;
				.tabs__body_woman & {
					content: url("../img/bicycle-02-small.png");
				}
			}
		}
	}
	// .tabs__desc
	&__desc {
		&:not(:last-child) {
			margin-bottom: 16px;
		}
	}
	// .tabs__specifications
	&__specifications {
		@include adaptiveValue("padding-top", 40, 30);
		@include adaptiveValue("padding-bottom", 20, 10);
	}
	// .tabs__spec-title
	&__spec-title {
	}
	// .tabs__spec-list
	&__spec-list {
		display: grid;

		gap: 16px;
		@extend %listCounter;
		@media (min-width: em(550)) {
			grid-template-columns: 0.5fr 0.5fr;
			grid-auto-columns: 0.5fr;
			grid-auto-flow: row;
		}
		.tabs__body_woman & {
			@extend %listCounterWoman;
		}
	}
	// .tabs__spec-item
	&__spec-item {
	}
	// .tabs__add-spec
	&__add-spec {
	}
	// .tabs__actives
	&__actives {
	}
}

.add-spec {
	@include adaptiveValue("padding-top", 20, 10);
	@include adaptiveValue("padding-bottom", 40, 30);

	// .add-spec__title
	&__title {
	}
	// .add-spec__body
	&__body {
		display: flex;
		max-width: 503px;
		gap: 24px;
		@media (max-width: em(550)) {
			flex-direction: column;
			gap: 15px;
		}
	}
	// .add-spec__inp-text
	&__inp-text {
		width: 100%;
		min-height: 52px;
		display: flex;
		align-items: center;
		padding: 14px 16px;
		background: #ffffff;
		border: 1px solid #d9d9d9;
		border-radius: 16px;
		&:focus,
		&:active {
			outline: none;
			outline-offset: none;
			&::placeholder {
				transform: translateX(-100%);
			}
		}
		&::placeholder {
			color: $grey;
			transition: all 0.3s ease 0s;
		}
	}
	// .add-spec__btn
	&__btn {
	}
}
.btn {
	display: inline-flex;
	justify-content: center;
	align-items: center;
	text-align: center;
	padding: 14px 24px;
	border-radius: 16px;
	min-height: 52px;
	// .btn__blue
	&__blue {
		background: #3922c5;
		color: #ffffff;
	}
	// .btn__transparent
	&__transparent {
		background: transparent;
		color: $mainColor;
	}
}
.actives {
	display: flex;
	gap: 10px;
	background: #ffffff;
	box-shadow: 0px 10px 40px rgba(12, 12, 12, 0.1);
	border-radius: 20px;
	padding: 30px 36px;
	@include adaptiveValue("margin-bottom", 40, 30);
	// .actives__btn
	&__btn {
	}
}
